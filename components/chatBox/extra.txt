    useEffect(() => {
        console.log("Add listener");
        initializeSocket();
        return () => {
            console.log("remove listener");

            removeSocket();
        };
    }, []);

    const initializeSocket = async () => {
        // await fetch("/api/socket");
        console.log("initialized");
        socket.on("newIncomingMessage", (msg: any) => {
            if (msg.author === props.chosenUsername) return;
            setMessages((currentMsg) => [
                ...currentMsg,
                { author: msg.author, message: msg.message },
            ]);

            console.log(`"socket initializer" ${message}`);
        });
    };

    const removeSocket = async () => {
        socket.off("newIncomingMessage");
    };

    const sendMessage = async () => {
        console.log("inside--- Send Message called");

        socket.emit("createdMessage", {
            author: props.chosenUsername,
            message: message,
        });
        setMessages((currentMsg) => [
            ...currentMsg,
            { author: props.chosenUsername, message: message },
        ]);
        console.log(`"Send Message" ${message}`);
        setMessage("");
    };

    console.log(`"ChatBox" ${messages}`);